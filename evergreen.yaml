ignore:
  - "*.md"
  - "*.rst"

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: run-make
        vars: { target: "${task_name}" }

  - &run-go-test-suite
    # runs a make target and then uploads gotest output to
    # evergreen. The test name should correspond to a make target for
    # that suite
    name: test
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: setup-credentials
      - func: run-make
        vars: { target: "${task_name}" }
  - &generic-linux-distros
    - rhel62-test
    - rhel70-small
    - rhel62-small
    - linux-64-amzn-test
    - debian81-test
    - debian71-test

#######################################
#              Functions              #
#######################################
functions:
  setup-credentials:
    command: shell.exec
    params:
       silent: true
       script: |
         mkdir ~/.aws

         cat <<EOF > ~/.aws/config
         [default]
         region = us-east-1
         EOF

         cat <<EOF > ~/.aws/credentials
         [default]
         aws_access_key_id = ${aws_key}
         aws_secret_access_key = ${aws_secret}
         EOF
  run-make:
    command: shell.exec
    params:
       script: |
         set -o errexit
         set -o verbose

         # Configure a local go path for this build.
         export GOPATH=`pwd`/gopath

         # on windows we need to turn the slashes the other way
         if [ "Windows_NT" == "$OS" ]; then
            export GOPATH=$(cygpath -m $GOPATH)
         fi

         cd gopath/src/github.com/mongodb/curator

         # Run make, called with proper environment variables set,
         # running the target.
         ${build_env|} ${xc_env|} make ${target}

#######################################
#                Tasks                #
#######################################
tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - name: build
    tags: ["dist"]
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: run-make
        vars: { target: "build dist" }
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/mongodb/curator/build/dist.tar.gz
          remote_file: curator/${build_id}-${build_variant}/curator-dist-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz

  - <<: *run-build
    tags: ["race"]
    name: build-race

  - <<: *run-build
    tags: ["report"]
    name: lint

  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: setup-credentials
      - func: run-make
        vars:
          target: "coverage-html"
          make_args: "-k"

  # define tasks for all test suites (modules)
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-operations
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-main
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-curator
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-sthree
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-repobuilder

  - <<: *run-go-test-suite
    name: race-operations
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-main
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-curator
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-sthree
    tags: ["race"]
    depends_on:
      - name: build-race
  - <<: *run-go-test-suite
    name: race-repobuilder
    tags: ["race"]
    depends_on:
      - name: build-race

  - name: push
    patchable: false
    stepback: false
    depends_on:
    - name: "*"
    commands:
      - command: s3Copy.copy
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          s3_copy_files:
          - {'source': { 'path': 'curator/${build_id}-${build_variant}/curator-dist-${revision}.tar.gz', 'bucket': 'mciuploads' },
             'destination': { 'path': 'build/curator/curator-dist-${build_variant}-${revision}.tar.gz', 'bucket': 'boxes.10gen.com' }
            }

post:
  - command: gotest.parse_files
    params:
      files:
        - "gopath/src/github.com/mongodb/curator/build/test.*.out"
        - "gopath/src/github.com/mongodb/curator/build/race.*.out"
        - "gopath/src/github.com/mongodb/curator/build/output.*"
  - command: shell.exec
    params:
      script: |
        rm -rf curator
        rm -rf ~/.aws
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/curator/build/output.*.coverage.html"]
      remote_file: curator/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/curator/build/output.*.coverage"]
      remote_file: curator/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    run_on:
      - archlinux-test
      - archlinux-build
    tasks:
      - ".race"
      - ".report"
      - name: "push"

  - name: rhel70
    display_name: RHEL 7.0
    expansions:
      build_env: "PATH=/opt/go:$PATH"
    run_on:
      - rhel70-small
      - rhel70
    tasks:
      - ".dist"
      - ".test"
      - name: "push"

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    run_on:
      - ubuntu1604-test
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
    tasks:
      - ".dist"
      - ".test"
      - name: "push"

  - name: macos
    display_name: macOS 10.12
    expansions:
      build_env: "PATH=/usr/local/go/bin:$PATH"
    run_on:
      - macos-1012
    tasks:
      - ".dist"
      - ".test"
      - name: "push"

  # the following targets *just* cross compile the binary for different architectures.
  - name: s390x
    display_name: "zLinux (cross-compile)"
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
      xc_env: "GOARCH=s390x GOOS=linux"
    run_on:
      *generic-linux-distros
    tasks:
      - name: "build"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: power
    display_name: "Linux POWER (cross-compile)"
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
      xc_env: "GOARCH=ppc64le GOOS=linux"
    run_on:
      *generic-linux-distros
    tasks:
      - name: "build"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: arm
    display_name: "Linux ARM64 (cross-compile)"
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
      xc_env: "GOARCH=arm64 GOOS=linux"
    run_on:
      *generic-linux-distros
    tasks:
      - name: "build"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: linux-32
    display_name: "Linux 32-bit (cross-compile)"
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
      xc_env: "GOARCH=386 GOOS=linux"
    run_on:
      *generic-linux-distros
    tasks:
      - name: "build"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: windows-64
    display_name: "Windows 64-bit (cross-compile)"
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
      xc_env: "GOARCH=amd64 GOOS=windows"
    run_on:
      *generic-linux-distros
    tasks:
      - name: "build"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: windows-32
    display_name: "Windows 32-bit (cross-compile)"
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
      xc_env: "GOARCH=386 GOOS=windows"
    run_on:
      *generic-linux-distros
    tasks:
      - name: "build"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"
