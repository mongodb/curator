ignore:
  - "*.md"
  - "*.rst"

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: run-make
        vars: { target: "${task_name}" }

  - &run-go-test-suite
    # runs a make target and then uploads gotest output to
    # evergreen. The test name should correspond to a make target for
    # that suite
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: gopath/src/github.com/mongodb/curator
      binary: make
      args: ["${target}"]
      include_expansions_in_env: ["DISABLE_COVERAGE", "GO_BIN_PATH", "GOROOT", "RACE_DETECTOR"]
      env:
        GOPATH: ${workdir}/gopath
        GOOS: ${goos}
        GOARCH: ${goarch}
        GO111MODULE: "off"

#######################################
#                Tasks                #
#######################################
tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - name: build
    tags: ["dist"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: run-make
        vars: { target: "dist" }
      - command: s3.put
        type: setup
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/mongodb/curator/build/dist.tar.gz
          remote_file: curator/${build_id}-${build_variant}/curator-dist-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz

  - <<: *run-build
    tags: ["report"]
    name: lint

  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/curator
      - func: run-make
        vars:
          target: "coverage-html"

  # define tasks for all test suites (modules)
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-operations
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-cmd-curator
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-repobuilder
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-greenbay
  - <<: *run-go-test-suite
    tags: ["test"]
    name: test-greenbay-check

  - name: push
    patchable: false
    stepback: false
    depends_on:
    - name: "*"
    commands:
      - command: s3Copy.copy
        type: test
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          s3_copy_files:
          - {'source': { 'path': 'curator/${build_id}-${build_variant}/curator-dist-${revision}.tar.gz', 'bucket': 'mciuploads' },
             'destination': { 'path': 'build/curator/curator-dist-${build_variant}-${revision}.tar.gz', 'bucket': 'boxes.10gen.com' } }
          - {'source': { 'path': 'curator/${build_id}-${build_variant}/curator-dist-${revision}.tar.gz', 'bucket': 'mciuploads' },
             'destination': { 'path': 'build/curator/curator-dist-${build_variant}-latest.tar.gz', 'bucket': 'boxes.10gen.com' } }
          - {'source': { 'path': 'curator/${build_id}-${build_variant}/curator-dist-${revision}.tar.gz', 'bucket': 'mciuploads' },
             'destination': { 'path': 'build/curator/curator-dist-${goos}-${goarch}-${revision}.tar.gz', 'bucket': 'boxes.10gen.com' } }

post:
  - command: shell.exec
    params:
      shell: bash
      script: echo "running post commands now, parsing gotest files"
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/mongodb/curator/build/output.*"
  - command: shell.exec
    type: setup
    params:
      script: |
        rm -rf curator
        rm -rf ~/.aws
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/curator/build/output.*.coverage.html"]
      remote_file: curator/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/curator/build/output.*.coverage"]
      remote_file: curator/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      GOROOT: /opt/golang/go1.13
      RACE_DETECTOR: true
    run_on:
      - archlinux-small
      - archlinux-large
    tasks:
      - ".test"

  - name: lint
    display_name: Lint (Arch Linux)
    expansions:
      GOROOT: /opt/golang/go1.13
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
    run_on:
      - archlinux-small
      - archlinux-large
    tasks: 
      - name: ".report"

  - name: rhel70
    display_name: RHEL 7.0
    expansions:
      GO_BIN_PATH: /opt/golang/go1.9/bin/go
      GOROOT: /opt/golang/go1.9
      goarch: amd64
      goos: linux
    run_on:
      - rhel70-small
      - rhel70
    tasks:
      - ".dist"
      - ".test"
      - name: "push"

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    run_on:
      - ubuntu1604-small
      - ubuntu1604-large
    expansions:
      GO_BIN_PATH: /opt/golang/go1.9/bin/go
      GOROOT: /opt/golang/go1.9
      goarch: amd64
      goos: linux
    tasks:
      - ".dist"
      - ".test"
      - name: "push"

  - name: macos
    display_name: macOS 10.14
    expansions:
      DISABLE_COVERAGE: true
      GOROOT: /opt/golang/go1.13
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      goarch: amd64
      goos: darwin
    run_on:
      - macos-1014
    tasks:
      - ".dist"
      - ".test"
      - name: "push"

  # the following targets *just* cross compile the binary for different architectures.
  - name: macos-arm64
    display_name: macOS 11.00 ARM64 (cross-compile)
    expansions:
      DISABLE_COVERAGE: true
      GOROOT: /opt/golang/go1.16
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      goarch: arm64
      goos: darwin
    run_on:
      - macos-1014
    tasks:
      - name: ".dist"
        depends_on:
          - name: ".test"
            variant: macos
      - name: "push"

  - name: s390x
    display_name: "zLinux (cross-compile)"
    expansions:
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      GOROOT: /opt/golang/go1.13
      goarch: s390x
      goos: linux
    run_on:
      - ubuntu1604-small
      - ubuntu1604-large
    tasks:
      - name: ".dist"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: power
    display_name: "Linux POWER (cross-compile)"
    expansions:
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      GOROOT: /opt/golang/go1.13
      goarch: ppc64le
      goos: linux
    run_on:
      - ubuntu1604-small
      - ubuntu1604-large
    tasks:
      - name: ".dist"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: arm
    display_name: "Linux ARM64 (cross-compile)"
    expansions:
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      GOROOT: /opt/golang/go1.13
      goarch: arm64
      goos: linux
    run_on:
      - ubuntu1604-small
      - ubuntu1604-large
    tasks:
      - name: ".dist"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: linux-32
    display_name: "Linux 32-bit (cross-compile)"
    expansions:
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      GOROOT: /opt/golang/go1.13
      goarch: 386
      goos: linux
    run_on:
      - ubuntu1604-small
      - ubuntu1604-large
    tasks:
      - name: ".dist"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: windows-64
    display_name: "Windows 64-bit (cross-compile)"
    expansions:
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      GOROOT: /opt/golang/go1.13
      goarch: amd64
      goos: windows
    run_on:
      - ubuntu1604-small
      - ubuntu1604-large
    tasks:
      - name: ".dist"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"

  - name: windows-32
    display_name: "Windows 32-bit (cross-compile)"
    expansions:
      GO_BIN_PATH: /opt/golang/go1.13/bin/go
      GOROOT: /opt/golang/go1.13
      goarch: 386
      goos: windows
    run_on:
      - ubuntu1604-small
      - ubuntu1604-large
    tasks:
      - name: ".dist"
        depends_on:
        - name: ".test"
          variant: "rhel70"
      - name: "push"
