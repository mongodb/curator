// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vendor/cedar.proto

package internal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StorageLocation int32

const (
	StorageLocation_UNKNOWN    StorageLocation = 0
	StorageLocation_CEDAR_S3   StorageLocation = 1
	StorageLocation_PROJECT_S3 StorageLocation = 2
	StorageLocation_GRIDFS     StorageLocation = 3
	StorageLocation_EPHEMERAL  StorageLocation = 4
)

var StorageLocation_name = map[int32]string{
	0: "UNKNOWN",
	1: "CEDAR_S3",
	2: "PROJECT_S3",
	3: "GRIDFS",
	4: "EPHEMERAL",
}

var StorageLocation_value = map[string]int32{
	"UNKNOWN":    0,
	"CEDAR_S3":   1,
	"PROJECT_S3": 2,
	"GRIDFS":     3,
	"EPHEMERAL":  4,
}

func (x StorageLocation) String() string {
	return proto.EnumName(StorageLocation_name, int32(x))
}

func (StorageLocation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{0}
}

type DataFormat int32

const (
	DataFormat_TEXT DataFormat = 0
	DataFormat_FTDC DataFormat = 1
	DataFormat_BSON DataFormat = 2
	DataFormat_JSON DataFormat = 3
	DataFormat_CSV  DataFormat = 4
)

var DataFormat_name = map[int32]string{
	0: "TEXT",
	1: "FTDC",
	2: "BSON",
	3: "JSON",
	4: "CSV",
}

var DataFormat_value = map[string]int32{
	"TEXT": 0,
	"FTDC": 1,
	"BSON": 2,
	"JSON": 3,
	"CSV":  4,
}

func (x DataFormat) String() string {
	return proto.EnumName(DataFormat_name, int32(x))
}

func (DataFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{1}
}

type CompressionType int32

const (
	CompressionType_NONE  CompressionType = 0
	CompressionType_TARGZ CompressionType = 1
	CompressionType_ZIP   CompressionType = 2
	CompressionType_GZ    CompressionType = 3
	CompressionType_XZ    CompressionType = 4
)

var CompressionType_name = map[int32]string{
	0: "NONE",
	1: "TARGZ",
	2: "ZIP",
	3: "GZ",
	4: "XZ",
}

var CompressionType_value = map[string]int32{
	"NONE":  0,
	"TARGZ": 1,
	"ZIP":   2,
	"GZ":    3,
	"XZ":    4,
}

func (x CompressionType) String() string {
	return proto.EnumName(CompressionType_name, int32(x))
}

func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{2}
}

type SchemaType int32

const (
	SchemaType_RAW_EVENTS             SchemaType = 0
	SchemaType_COLLAPSED_EVENTS       SchemaType = 1
	SchemaType_INTERVAL_SUMMARIZATION SchemaType = 2
	SchemaType_HISTOGRAM              SchemaType = 3
)

var SchemaType_name = map[int32]string{
	0: "RAW_EVENTS",
	1: "COLLAPSED_EVENTS",
	2: "INTERVAL_SUMMARIZATION",
	3: "HISTOGRAM",
}

var SchemaType_value = map[string]int32{
	"RAW_EVENTS":             0,
	"COLLAPSED_EVENTS":       1,
	"INTERVAL_SUMMARIZATION": 2,
	"HISTOGRAM":              3,
}

func (x SchemaType) String() string {
	return proto.EnumName(SchemaType_name, int32(x))
}

func (SchemaType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{3}
}

type RollupType int32

const (
	RollupType_SUM                RollupType = 0
	RollupType_MEAN               RollupType = 1
	RollupType_MEDIAN             RollupType = 2
	RollupType_MAX                RollupType = 3
	RollupType_MIN                RollupType = 4
	RollupType_STANDARD_DEVIATION RollupType = 5
	RollupType_THROUGHPUT         RollupType = 6
	RollupType_LATENCY            RollupType = 7
	RollupType_PERCENTILE_99TH    RollupType = 8
	RollupType_PERCENTILE_95TH    RollupType = 9
	RollupType_PERCENTILE_90TH    RollupType = 10
	RollupType_PERCENTILE_80TH    RollupType = 11
	RollupType_PERCENTILE_50TH    RollupType = 12
)

var RollupType_name = map[int32]string{
	0:  "SUM",
	1:  "MEAN",
	2:  "MEDIAN",
	3:  "MAX",
	4:  "MIN",
	5:  "STANDARD_DEVIATION",
	6:  "THROUGHPUT",
	7:  "LATENCY",
	8:  "PERCENTILE_99TH",
	9:  "PERCENTILE_95TH",
	10: "PERCENTILE_90TH",
	11: "PERCENTILE_80TH",
	12: "PERCENTILE_50TH",
}

var RollupType_value = map[string]int32{
	"SUM":                0,
	"MEAN":               1,
	"MEDIAN":             2,
	"MAX":                3,
	"MIN":                4,
	"STANDARD_DEVIATION": 5,
	"THROUGHPUT":         6,
	"LATENCY":            7,
	"PERCENTILE_99TH":    8,
	"PERCENTILE_95TH":    9,
	"PERCENTILE_90TH":    10,
	"PERCENTILE_80TH":    11,
	"PERCENTILE_50TH":    12,
}

func (x RollupType) String() string {
	return proto.EnumName(RollupType_name, int32(x))
}

func (RollupType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{4}
}

type ResultID struct {
	Project              string               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Version              string               `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Variant              string               `protobuf:"bytes,3,opt,name=variant,proto3" json:"variant,omitempty"`
	TaskName             string               `protobuf:"bytes,4,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Execution            int32                `protobuf:"varint,5,opt,name=execution,proto3" json:"execution,omitempty"`
	TaskId               string               `protobuf:"bytes,6,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TestName             string               `protobuf:"bytes,7,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	Parent               string               `protobuf:"bytes,8,opt,name=parent,proto3" json:"parent,omitempty"`
	Trial                int32                `protobuf:"varint,9,opt,name=trial,proto3" json:"trial,omitempty"`
	Tags                 []string             `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Arguments            map[string]int32     `protobuf:"bytes,11,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Mainline             bool                 `protobuf:"varint,12,opt,name=mainline,proto3" json:"mainline,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResultID) Reset()         { *m = ResultID{} }
func (m *ResultID) String() string { return proto.CompactTextString(m) }
func (*ResultID) ProtoMessage()    {}
func (*ResultID) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{0}
}

func (m *ResultID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultID.Unmarshal(m, b)
}
func (m *ResultID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultID.Marshal(b, m, deterministic)
}
func (m *ResultID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultID.Merge(m, src)
}
func (m *ResultID) XXX_Size() int {
	return xxx_messageInfo_ResultID.Size(m)
}
func (m *ResultID) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultID.DiscardUnknown(m)
}

var xxx_messageInfo_ResultID proto.InternalMessageInfo

func (m *ResultID) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ResultID) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ResultID) GetVariant() string {
	if m != nil {
		return m.Variant
	}
	return ""
}

func (m *ResultID) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *ResultID) GetExecution() int32 {
	if m != nil {
		return m.Execution
	}
	return 0
}

func (m *ResultID) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ResultID) GetTestName() string {
	if m != nil {
		return m.TestName
	}
	return ""
}

func (m *ResultID) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ResultID) GetTrial() int32 {
	if m != nil {
		return m.Trial
	}
	return 0
}

func (m *ResultID) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ResultID) GetArguments() map[string]int32 {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *ResultID) GetMainline() bool {
	if m != nil {
		return m.Mainline
	}
	return false
}

func (m *ResultID) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ResultData struct {
	Id                   *ResultID       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Artifacts            []*ArtifactInfo `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Rollups              []*RollupValue  `protobuf:"bytes,3,rep,name=rollups,proto3" json:"rollups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResultData) Reset()         { *m = ResultData{} }
func (m *ResultData) String() string { return proto.CompactTextString(m) }
func (*ResultData) ProtoMessage()    {}
func (*ResultData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{1}
}

func (m *ResultData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultData.Unmarshal(m, b)
}
func (m *ResultData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultData.Marshal(b, m, deterministic)
}
func (m *ResultData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultData.Merge(m, src)
}
func (m *ResultData) XXX_Size() int {
	return xxx_messageInfo_ResultData.Size(m)
}
func (m *ResultData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultData.DiscardUnknown(m)
}

var xxx_messageInfo_ResultData proto.InternalMessageInfo

func (m *ResultData) GetId() *ResultID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResultData) GetArtifacts() []*ArtifactInfo {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *ResultData) GetRollups() []*RollupValue {
	if m != nil {
		return m.Rollups
	}
	return nil
}

type ArtifactInfo struct {
	Location             StorageLocation      `protobuf:"varint,1,opt,name=location,proto3,enum=cedar.StorageLocation" json:"location,omitempty"`
	Bucket               string               `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Path                 string               `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Format               DataFormat           `protobuf:"varint,4,opt,name=format,proto3,enum=cedar.DataFormat" json:"format,omitempty"`
	Compression          CompressionType      `protobuf:"varint,5,opt,name=compression,proto3,enum=cedar.CompressionType" json:"compression,omitempty"`
	Schema               SchemaType           `protobuf:"varint,6,opt,name=schema,proto3,enum=cedar.SchemaType" json:"schema,omitempty"`
	Tags                 []string             `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ArtifactInfo) Reset()         { *m = ArtifactInfo{} }
func (m *ArtifactInfo) String() string { return proto.CompactTextString(m) }
func (*ArtifactInfo) ProtoMessage()    {}
func (*ArtifactInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{2}
}

func (m *ArtifactInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactInfo.Unmarshal(m, b)
}
func (m *ArtifactInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactInfo.Marshal(b, m, deterministic)
}
func (m *ArtifactInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactInfo.Merge(m, src)
}
func (m *ArtifactInfo) XXX_Size() int {
	return xxx_messageInfo_ArtifactInfo.Size(m)
}
func (m *ArtifactInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactInfo proto.InternalMessageInfo

func (m *ArtifactInfo) GetLocation() StorageLocation {
	if m != nil {
		return m.Location
	}
	return StorageLocation_UNKNOWN
}

func (m *ArtifactInfo) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ArtifactInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ArtifactInfo) GetFormat() DataFormat {
	if m != nil {
		return m.Format
	}
	return DataFormat_TEXT
}

func (m *ArtifactInfo) GetCompression() CompressionType {
	if m != nil {
		return m.Compression
	}
	return CompressionType_NONE
}

func (m *ArtifactInfo) GetSchema() SchemaType {
	if m != nil {
		return m.Schema
	}
	return SchemaType_RAW_EVENTS
}

func (m *ArtifactInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ArtifactInfo) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type MetricsSeriesEnd struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsComplete           bool                 `protobuf:"varint,2,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	CompletedAt          *timestamp.Timestamp `protobuf:"bytes,3,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetricsSeriesEnd) Reset()         { *m = MetricsSeriesEnd{} }
func (m *MetricsSeriesEnd) String() string { return proto.CompactTextString(m) }
func (*MetricsSeriesEnd) ProtoMessage()    {}
func (*MetricsSeriesEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{3}
}

func (m *MetricsSeriesEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsSeriesEnd.Unmarshal(m, b)
}
func (m *MetricsSeriesEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsSeriesEnd.Marshal(b, m, deterministic)
}
func (m *MetricsSeriesEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsSeriesEnd.Merge(m, src)
}
func (m *MetricsSeriesEnd) XXX_Size() int {
	return xxx_messageInfo_MetricsSeriesEnd.Size(m)
}
func (m *MetricsSeriesEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsSeriesEnd.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsSeriesEnd proto.InternalMessageInfo

func (m *MetricsSeriesEnd) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsSeriesEnd) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

func (m *MetricsSeriesEnd) GetCompletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CompletedAt
	}
	return nil
}

type MetricsResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsResponse) Reset()         { *m = MetricsResponse{} }
func (m *MetricsResponse) String() string { return proto.CompactTextString(m) }
func (*MetricsResponse) ProtoMessage()    {}
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{4}
}

func (m *MetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsResponse.Unmarshal(m, b)
}
func (m *MetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsResponse.Marshal(b, m, deterministic)
}
func (m *MetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsResponse.Merge(m, src)
}
func (m *MetricsResponse) XXX_Size() int {
	return xxx_messageInfo_MetricsResponse.Size(m)
}
func (m *MetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsResponse proto.InternalMessageInfo

func (m *MetricsResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type SendResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{5}
}

func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (m *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(m, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type MetricsPoint struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Counters             *MetricsCounters     `protobuf:"bytes,2,opt,name=counters,proto3" json:"counters,omitempty"`
	Timers               *MetricsTimers       `protobuf:"bytes,3,opt,name=timers,proto3" json:"timers,omitempty"`
	Gauges               *MetricsGauges       `protobuf:"bytes,4,opt,name=gauges,proto3" json:"gauges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetricsPoint) Reset()         { *m = MetricsPoint{} }
func (m *MetricsPoint) String() string { return proto.CompactTextString(m) }
func (*MetricsPoint) ProtoMessage()    {}
func (*MetricsPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{6}
}

func (m *MetricsPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsPoint.Unmarshal(m, b)
}
func (m *MetricsPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsPoint.Marshal(b, m, deterministic)
}
func (m *MetricsPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsPoint.Merge(m, src)
}
func (m *MetricsPoint) XXX_Size() int {
	return xxx_messageInfo_MetricsPoint.Size(m)
}
func (m *MetricsPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsPoint.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsPoint proto.InternalMessageInfo

func (m *MetricsPoint) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *MetricsPoint) GetCounters() *MetricsCounters {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *MetricsPoint) GetTimers() *MetricsTimers {
	if m != nil {
		return m.Timers
	}
	return nil
}

func (m *MetricsPoint) GetGauges() *MetricsGauges {
	if m != nil {
		return m.Gauges
	}
	return nil
}

type MetricsCounters struct {
	Ops                  int64    `protobuf:"varint,1,opt,name=ops,proto3" json:"ops,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Errors               int64    `protobuf:"varint,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsCounters) Reset()         { *m = MetricsCounters{} }
func (m *MetricsCounters) String() string { return proto.CompactTextString(m) }
func (*MetricsCounters) ProtoMessage()    {}
func (*MetricsCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{7}
}

func (m *MetricsCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsCounters.Unmarshal(m, b)
}
func (m *MetricsCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsCounters.Marshal(b, m, deterministic)
}
func (m *MetricsCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsCounters.Merge(m, src)
}
func (m *MetricsCounters) XXX_Size() int {
	return xxx_messageInfo_MetricsCounters.Size(m)
}
func (m *MetricsCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsCounters.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsCounters proto.InternalMessageInfo

func (m *MetricsCounters) GetOps() int64 {
	if m != nil {
		return m.Ops
	}
	return 0
}

func (m *MetricsCounters) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MetricsCounters) GetErrors() int64 {
	if m != nil {
		return m.Errors
	}
	return 0
}

type MetricsTimers struct {
	Duration             *duration.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Total                *duration.Duration `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MetricsTimers) Reset()         { *m = MetricsTimers{} }
func (m *MetricsTimers) String() string { return proto.CompactTextString(m) }
func (*MetricsTimers) ProtoMessage()    {}
func (*MetricsTimers) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{8}
}

func (m *MetricsTimers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsTimers.Unmarshal(m, b)
}
func (m *MetricsTimers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsTimers.Marshal(b, m, deterministic)
}
func (m *MetricsTimers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsTimers.Merge(m, src)
}
func (m *MetricsTimers) XXX_Size() int {
	return xxx_messageInfo_MetricsTimers.Size(m)
}
func (m *MetricsTimers) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsTimers.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsTimers proto.InternalMessageInfo

func (m *MetricsTimers) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *MetricsTimers) GetTotal() *duration.Duration {
	if m != nil {
		return m.Total
	}
	return nil
}

type MetricsGauges struct {
	State                int64    `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Workers              int64    `protobuf:"varint,2,opt,name=workers,proto3" json:"workers,omitempty"`
	Failed               bool     `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsGauges) Reset()         { *m = MetricsGauges{} }
func (m *MetricsGauges) String() string { return proto.CompactTextString(m) }
func (*MetricsGauges) ProtoMessage()    {}
func (*MetricsGauges) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{9}
}

func (m *MetricsGauges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsGauges.Unmarshal(m, b)
}
func (m *MetricsGauges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsGauges.Marshal(b, m, deterministic)
}
func (m *MetricsGauges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsGauges.Merge(m, src)
}
func (m *MetricsGauges) XXX_Size() int {
	return xxx_messageInfo_MetricsGauges.Size(m)
}
func (m *MetricsGauges) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsGauges.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsGauges proto.InternalMessageInfo

func (m *MetricsGauges) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *MetricsGauges) GetWorkers() int64 {
	if m != nil {
		return m.Workers
	}
	return 0
}

func (m *MetricsGauges) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

type MetricsEvent struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event                []*MetricsPoint `protobuf:"bytes,3,rep,name=Event,proto3" json:"Event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetricsEvent) Reset()         { *m = MetricsEvent{} }
func (m *MetricsEvent) String() string { return proto.CompactTextString(m) }
func (*MetricsEvent) ProtoMessage()    {}
func (*MetricsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{10}
}

func (m *MetricsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsEvent.Unmarshal(m, b)
}
func (m *MetricsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsEvent.Marshal(b, m, deterministic)
}
func (m *MetricsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsEvent.Merge(m, src)
}
func (m *MetricsEvent) XXX_Size() int {
	return xxx_messageInfo_MetricsEvent.Size(m)
}
func (m *MetricsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsEvent proto.InternalMessageInfo

func (m *MetricsEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsEvent) GetEvent() []*MetricsPoint {
	if m != nil {
		return m.Event
	}
	return nil
}

type RollupValue struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*RollupValue_Int
	//	*RollupValue_Fl
	Value                isRollupValue_Value `protobuf_oneof:"value"`
	Type                 RollupType          `protobuf:"varint,4,opt,name=type,proto3,enum=cedar.RollupType" json:"type,omitempty"`
	Version              int64               `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	UserSubmitted        bool                `protobuf:"varint,6,opt,name=user_submitted,json=userSubmitted,proto3" json:"user_submitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RollupValue) Reset()         { *m = RollupValue{} }
func (m *RollupValue) String() string { return proto.CompactTextString(m) }
func (*RollupValue) ProtoMessage()    {}
func (*RollupValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{11}
}

func (m *RollupValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollupValue.Unmarshal(m, b)
}
func (m *RollupValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollupValue.Marshal(b, m, deterministic)
}
func (m *RollupValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollupValue.Merge(m, src)
}
func (m *RollupValue) XXX_Size() int {
	return xxx_messageInfo_RollupValue.Size(m)
}
func (m *RollupValue) XXX_DiscardUnknown() {
	xxx_messageInfo_RollupValue.DiscardUnknown(m)
}

var xxx_messageInfo_RollupValue proto.InternalMessageInfo

func (m *RollupValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isRollupValue_Value interface {
	isRollupValue_Value()
}

type RollupValue_Int struct {
	Int int64 `protobuf:"varint,2,opt,name=int,proto3,oneof"`
}

type RollupValue_Fl struct {
	Fl float64 `protobuf:"fixed64,3,opt,name=fl,proto3,oneof"`
}

func (*RollupValue_Int) isRollupValue_Value() {}

func (*RollupValue_Fl) isRollupValue_Value() {}

func (m *RollupValue) GetValue() isRollupValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RollupValue) GetInt() int64 {
	if x, ok := m.GetValue().(*RollupValue_Int); ok {
		return x.Int
	}
	return 0
}

func (m *RollupValue) GetFl() float64 {
	if x, ok := m.GetValue().(*RollupValue_Fl); ok {
		return x.Fl
	}
	return 0
}

func (m *RollupValue) GetType() RollupType {
	if m != nil {
		return m.Type
	}
	return RollupType_SUM
}

func (m *RollupValue) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *RollupValue) GetUserSubmitted() bool {
	if m != nil {
		return m.UserSubmitted
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RollupValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RollupValue_Int)(nil),
		(*RollupValue_Fl)(nil),
	}
}

type ArtifactData struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Artifacts            []*ArtifactInfo `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ArtifactData) Reset()         { *m = ArtifactData{} }
func (m *ArtifactData) String() string { return proto.CompactTextString(m) }
func (*ArtifactData) ProtoMessage()    {}
func (*ArtifactData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{12}
}

func (m *ArtifactData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactData.Unmarshal(m, b)
}
func (m *ArtifactData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactData.Marshal(b, m, deterministic)
}
func (m *ArtifactData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactData.Merge(m, src)
}
func (m *ArtifactData) XXX_Size() int {
	return xxx_messageInfo_ArtifactData.Size(m)
}
func (m *ArtifactData) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactData.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactData proto.InternalMessageInfo

func (m *ArtifactData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ArtifactData) GetArtifacts() []*ArtifactInfo {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

type RollupData struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rollups              []*RollupValue `protobuf:"bytes,2,rep,name=rollups,proto3" json:"rollups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RollupData) Reset()         { *m = RollupData{} }
func (m *RollupData) String() string { return proto.CompactTextString(m) }
func (*RollupData) ProtoMessage()    {}
func (*RollupData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f43d153eecc12f, []int{13}
}

func (m *RollupData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollupData.Unmarshal(m, b)
}
func (m *RollupData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollupData.Marshal(b, m, deterministic)
}
func (m *RollupData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollupData.Merge(m, src)
}
func (m *RollupData) XXX_Size() int {
	return xxx_messageInfo_RollupData.Size(m)
}
func (m *RollupData) XXX_DiscardUnknown() {
	xxx_messageInfo_RollupData.DiscardUnknown(m)
}

var xxx_messageInfo_RollupData proto.InternalMessageInfo

func (m *RollupData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RollupData) GetRollups() []*RollupValue {
	if m != nil {
		return m.Rollups
	}
	return nil
}

func init() {
	proto.RegisterEnum("cedar.StorageLocation", StorageLocation_name, StorageLocation_value)
	proto.RegisterEnum("cedar.DataFormat", DataFormat_name, DataFormat_value)
	proto.RegisterEnum("cedar.CompressionType", CompressionType_name, CompressionType_value)
	proto.RegisterEnum("cedar.SchemaType", SchemaType_name, SchemaType_value)
	proto.RegisterEnum("cedar.RollupType", RollupType_name, RollupType_value)
	proto.RegisterType((*ResultID)(nil), "cedar.ResultID")
	proto.RegisterMapType((map[string]int32)(nil), "cedar.ResultID.ArgumentsEntry")
	proto.RegisterType((*ResultData)(nil), "cedar.ResultData")
	proto.RegisterType((*ArtifactInfo)(nil), "cedar.ArtifactInfo")
	proto.RegisterType((*MetricsSeriesEnd)(nil), "cedar.MetricsSeriesEnd")
	proto.RegisterType((*MetricsResponse)(nil), "cedar.MetricsResponse")
	proto.RegisterType((*SendResponse)(nil), "cedar.SendResponse")
	proto.RegisterType((*MetricsPoint)(nil), "cedar.MetricsPoint")
	proto.RegisterType((*MetricsCounters)(nil), "cedar.MetricsCounters")
	proto.RegisterType((*MetricsTimers)(nil), "cedar.MetricsTimers")
	proto.RegisterType((*MetricsGauges)(nil), "cedar.MetricsGauges")
	proto.RegisterType((*MetricsEvent)(nil), "cedar.MetricsEvent")
	proto.RegisterType((*RollupValue)(nil), "cedar.RollupValue")
	proto.RegisterType((*ArtifactData)(nil), "cedar.ArtifactData")
	proto.RegisterType((*RollupData)(nil), "cedar.RollupData")
}

func init() { proto.RegisterFile("vendor/cedar.proto", fileDescriptor_f2f43d153eecc12f) }

var fileDescriptor_f2f43d153eecc12f = []byte{
	// 1447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x36, 0x45, 0x1d, 0x47, 0xb2, 0xcd, 0x6c, 0x02, 0x87, 0xbf, 0xfe, 0x22, 0x31, 0x04, 0x04,
	0x70, 0x8c, 0xc0, 0x6e, 0x1d, 0x04, 0x88, 0xd3, 0xa4, 0x01, 0x23, 0x31, 0x96, 0x52, 0xeb, 0xd0,
	0x25, 0x6d, 0xa7, 0x06, 0x0a, 0x81, 0xa6, 0xd6, 0x0e, 0x6b, 0x8a, 0x14, 0xb8, 0x2b, 0xa7, 0xee,
	0x65, 0x1f, 0xa0, 0x40, 0xdf, 0xa6, 0x2f, 0xd1, 0xbe, 0x40, 0x81, 0x3e, 0x4b, 0xb1, 0x07, 0x52,
	0x87, 0xb4, 0x0e, 0x7c, 0xa5, 0x9d, 0x99, 0x6f, 0x66, 0x67, 0x67, 0x46, 0xdf, 0x10, 0xd0, 0x15,
	0x89, 0x46, 0x71, 0xb2, 0xeb, 0x93, 0x91, 0x97, 0xec, 0x4c, 0x92, 0x98, 0xc5, 0xa8, 0x20, 0x84,
	0xfa, 0x83, 0x8b, 0x38, 0xbe, 0x08, 0xc9, 0xae, 0x50, 0x9e, 0x4d, 0xcf, 0x77, 0x47, 0xd3, 0xc4,
	0x63, 0x41, 0x1c, 0x49, 0x58, 0xfd, 0xe1, 0xb2, 0x9d, 0x05, 0x63, 0x42, 0x99, 0x37, 0x9e, 0x48,
	0x40, 0xe3, 0x6f, 0x1d, 0xca, 0x98, 0xd0, 0x69, 0xc8, 0x3a, 0x2d, 0x64, 0x42, 0x69, 0x92, 0xc4,
	0x3f, 0x12, 0x9f, 0x99, 0xda, 0xa6, 0xb6, 0x55, 0xc1, 0xa9, 0xc8, 0x2d, 0x57, 0x24, 0xa1, 0x41,
	0x1c, 0x99, 0x39, 0x69, 0x51, 0xa2, 0xb0, 0x78, 0x49, 0xe0, 0x45, 0xcc, 0xd4, 0x95, 0x45, 0x8a,
	0xe8, 0xff, 0x50, 0x61, 0x1e, 0xbd, 0x1c, 0x46, 0xde, 0x98, 0x98, 0x79, 0x61, 0x2b, 0x73, 0x45,
	0xcf, 0x1b, 0x13, 0xf4, 0x05, 0x54, 0xc8, 0x4f, 0xc4, 0x9f, 0xf2, 0x5c, 0xcd, 0xc2, 0xa6, 0xb6,
	0x55, 0xc0, 0x33, 0x05, 0xba, 0x0f, 0x25, 0xe1, 0x1a, 0x8c, 0xcc, 0xa2, 0x70, 0x2c, 0x72, 0xb1,
	0x33, 0x12, 0x31, 0x09, 0x65, 0x32, 0x66, 0x49, 0xc5, 0x24, 0x94, 0x89, 0x98, 0x1b, 0x50, 0x9c,
	0x78, 0x09, 0x89, 0x98, 0x59, 0x96, 0x4e, 0x52, 0x42, 0xf7, 0xa0, 0xc0, 0x92, 0xc0, 0x0b, 0xcd,
	0x8a, 0xb8, 0x47, 0x0a, 0x08, 0x41, 0x9e, 0x79, 0x17, 0xd4, 0x84, 0x4d, 0x7d, 0xab, 0x82, 0xc5,
	0x19, 0xbd, 0x84, 0x8a, 0x97, 0x5c, 0x4c, 0xc7, 0x24, 0x62, 0xd4, 0xac, 0x6e, 0xea, 0x5b, 0xd5,
	0xbd, 0x07, 0x3b, 0xb2, 0xec, 0x69, 0x91, 0x76, 0xac, 0x14, 0x60, 0x47, 0x2c, 0xb9, 0xc6, 0x33,
	0x07, 0x54, 0x87, 0xf2, 0xd8, 0x0b, 0xa2, 0x30, 0x88, 0x88, 0x59, 0xdb, 0xd4, 0xb6, 0xca, 0x38,
	0x93, 0xd1, 0x3e, 0x80, 0x9f, 0x10, 0x8f, 0x91, 0xd1, 0xd0, 0x63, 0xe6, 0xea, 0xa6, 0xb6, 0x55,
	0xdd, 0xab, 0xef, 0xc8, 0xee, 0xec, 0xa4, 0xdd, 0xd9, 0x71, 0xd3, 0xee, 0xe0, 0x8a, 0x42, 0x5b,
	0xac, 0xfe, 0x12, 0xd6, 0x16, 0xef, 0x44, 0x06, 0xe8, 0x97, 0xe4, 0x5a, 0xf5, 0x88, 0x1f, 0xf9,
	0x13, 0xaf, 0xbc, 0x70, 0x4a, 0x44, 0x77, 0x0a, 0x58, 0x0a, 0x2f, 0x72, 0xcf, 0xb5, 0xc6, 0xaf,
	0x1a, 0x80, 0xcc, 0xbd, 0xe5, 0x31, 0x0f, 0x3d, 0x84, 0x5c, 0x30, 0x12, 0x9e, 0xd5, 0xbd, 0xf5,
	0xa5, 0xa7, 0xe1, 0x5c, 0x30, 0x42, 0x5f, 0xf1, 0x12, 0xb0, 0xe0, 0xdc, 0xf3, 0x19, 0x35, 0x73,
	0xa2, 0x04, 0x77, 0x15, 0xce, 0x52, 0xfa, 0x4e, 0x74, 0x1e, 0xe3, 0x19, 0x0a, 0x3d, 0x81, 0x52,
	0x12, 0x87, 0xe1, 0x74, 0x42, 0x4d, 0x5d, 0x38, 0xa0, 0x34, 0xb0, 0xd0, 0x1e, 0xf3, 0x5c, 0x70,
	0x0a, 0x69, 0xfc, 0x91, 0x83, 0xda, 0x7c, 0x24, 0xb4, 0x07, 0xe5, 0x30, 0xf6, 0xc5, 0xd4, 0x8a,
	0xc4, 0xd6, 0xf6, 0x36, 0x94, 0xbf, 0xc3, 0xe2, 0xc4, 0xbb, 0x20, 0x87, 0xca, 0x8a, 0x33, 0x1c,
	0x6f, 0xf5, 0xd9, 0xd4, 0xbf, 0x24, 0x4c, 0x8d, 0xa3, 0x92, 0x78, 0x53, 0x27, 0x1e, 0xfb, 0xa0,
	0x46, 0x51, 0x9c, 0xd1, 0x63, 0x28, 0x9e, 0xc7, 0xc9, 0xd8, 0x63, 0x62, 0x08, 0xd7, 0xf6, 0xee,
	0xa8, 0xe8, 0xbc, 0x1e, 0x6f, 0x85, 0x01, 0x2b, 0x00, 0x7a, 0x0e, 0x55, 0x3f, 0x1e, 0x4f, 0x12,
	0x42, 0x69, 0x3a, 0x97, 0xb3, 0x6c, 0x9a, 0x33, 0x8b, 0x7b, 0x3d, 0x21, 0x78, 0x1e, 0xca, 0x2f,
	0xa1, 0xfe, 0x07, 0x32, 0xf6, 0xc4, 0xc0, 0xce, 0x2e, 0x71, 0x84, 0x52, 0xe0, 0x15, 0x20, 0x1b,
	0xbc, 0xd2, 0xdc, 0xe0, 0x2d, 0x8e, 0x47, 0xf9, 0x16, 0xe3, 0xd1, 0xf8, 0x45, 0x03, 0xa3, 0x4b,
	0x58, 0x12, 0xf8, 0xd4, 0x21, 0x49, 0x40, 0xa8, 0x1d, 0x8d, 0xd0, 0x5a, 0xd6, 0xe6, 0x8a, 0xe8,
	0xea, 0x43, 0xa8, 0x06, 0x74, 0xc8, 0x13, 0x0e, 0x09, 0x93, 0x53, 0x52, 0xc6, 0x10, 0xd0, 0xa6,
	0xd2, 0xa0, 0x57, 0x50, 0x4b, 0xad, 0x22, 0x05, 0xfd, 0xb3, 0x29, 0x54, 0x33, 0xbc, 0xc5, 0x1a,
	0x5f, 0xc3, 0xba, 0xca, 0x01, 0x13, 0x3a, 0x89, 0x23, 0x4a, 0x3e, 0x49, 0xc1, 0x84, 0x12, 0x9d,
	0xfa, 0x3e, 0xa1, 0x54, 0x5d, 0x9f, 0x8a, 0x8d, 0x1e, 0xd4, 0x1c, 0x12, 0x8d, 0x6e, 0xef, 0xc9,
	0xc7, 0xde, 0x8f, 0xa7, 0x8a, 0x7a, 0x74, 0x2c, 0x85, 0xc6, 0x9f, 0x1a, 0xd4, 0x54, 0x36, 0x83,
	0x38, 0x88, 0x18, 0xda, 0x81, 0x3c, 0xcf, 0x5b, 0x8d, 0xfd, 0x4d, 0x8f, 0x12, 0x38, 0x3e, 0x91,
	0x22, 0x12, 0x49, 0xe4, 0x8d, 0xd5, 0x6c, 0x06, 0x54, 0xd8, 0xa6, 0xb2, 0xe2, 0x0c, 0x87, 0x9e,
	0x40, 0x91, 0x73, 0x6b, 0x42, 0x55, 0xe9, 0xee, 0x2d, 0x7a, 0xb8, 0xc2, 0x86, 0x15, 0x86, 0xa3,
	0x2f, 0xbc, 0xe9, 0x05, 0xa1, 0x62, 0x26, 0x3f, 0x41, 0x1f, 0x08, 0x1b, 0x56, 0x98, 0x46, 0x3f,
	0xab, 0x6e, 0x7a, 0x31, 0xa7, 0x80, 0x78, 0x42, 0xc5, 0x8b, 0x74, 0xcc, 0x8f, 0x7c, 0xac, 0x68,
	0xf0, 0xb3, 0xec, 0xad, 0x8e, 0xc5, 0x99, 0xff, 0x4d, 0x48, 0x92, 0xc4, 0x2a, 0x29, 0x1d, 0x2b,
	0xa9, 0xf1, 0x11, 0x56, 0x17, 0xf2, 0x42, 0xcf, 0xa0, 0x9c, 0x6e, 0x0e, 0x55, 0xa5, 0xff, 0x7d,
	0x52, 0xa5, 0x96, 0x02, 0xe0, 0x0c, 0x8a, 0x76, 0xa1, 0xc0, 0x62, 0xe6, 0x85, 0xaa, 0x4a, 0x37,
	0xf8, 0x48, 0x5c, 0xe3, 0x24, 0xbb, 0x58, 0x3e, 0x91, 0x77, 0x90, 0x32, 0x8f, 0x11, 0xf5, 0x12,
	0x29, 0xf0, 0x8e, 0x7f, 0x8c, 0x93, 0xcb, 0xb4, 0xfe, 0x3a, 0x4e, 0x45, 0xfe, 0xa2, 0x73, 0x2f,
	0x08, 0xc9, 0x48, 0xbc, 0xa8, 0x8c, 0x95, 0xd4, 0xe8, 0x64, 0x2d, 0xb7, 0xaf, 0x38, 0xe7, 0x2f,
	0xcf, 0xd0, 0x63, 0x28, 0x08, 0x83, 0x62, 0xa8, 0xbb, 0x8b, 0xf5, 0x16, 0x63, 0x82, 0x25, 0xa2,
	0xf1, 0xbb, 0x06, 0xd5, 0x39, 0xe6, 0xe2, 0x85, 0x15, 0xeb, 0x46, 0x06, 0x13, 0x67, 0x84, 0x40,
	0x0f, 0x22, 0x49, 0x3e, 0x7a, 0x7b, 0x05, 0x73, 0x01, 0x19, 0x90, 0x3b, 0x0f, 0x45, 0x5a, 0x5a,
	0x7b, 0x05, 0xe7, 0xce, 0x43, 0xf4, 0x08, 0xf2, 0xec, 0x7a, 0x42, 0x96, 0x78, 0x47, 0xc6, 0x16,
	0x94, 0x20, 0xcc, 0xf3, 0xcb, 0xb5, 0x20, 0x5f, 0x9b, 0x2e, 0xd7, 0x47, 0xb0, 0x36, 0xa5, 0x24,
	0x19, 0xd2, 0xe9, 0xd9, 0x38, 0x60, 0x8c, 0xc8, 0x75, 0x58, 0xc6, 0xab, 0x5c, 0xeb, 0xa4, 0xca,
	0x37, 0x25, 0xc5, 0xfe, 0x8d, 0xef, 0x66, 0xd4, 0x2a, 0xd8, 0x7e, 0xb9, 0x0a, 0xb7, 0x27, 0xf7,
	0xc6, 0x3b, 0x00, 0x99, 0xf0, 0xbf, 0x06, 0x9c, 0xa3, 0xfe, 0xdc, 0x67, 0xa9, 0x7f, 0xfb, 0x04,
	0xd6, 0x97, 0x28, 0x1d, 0x55, 0xa1, 0x74, 0xd4, 0xfb, 0xb6, 0xd7, 0x3f, 0xe9, 0x19, 0x2b, 0xa8,
	0x06, 0xe5, 0xa6, 0xdd, 0xb2, 0xf0, 0xd0, 0x79, 0x6a, 0x68, 0x68, 0x0d, 0x60, 0x80, 0xfb, 0xef,
	0xec, 0xa6, 0xcb, 0xe5, 0x1c, 0x02, 0x28, 0x1e, 0xe0, 0x4e, 0xeb, 0xad, 0x63, 0xe8, 0x68, 0x15,
	0x2a, 0xf6, 0xa0, 0x6d, 0x77, 0x6d, 0x6c, 0x1d, 0x1a, 0xf9, 0xed, 0x57, 0x00, 0x33, 0x36, 0x47,
	0x65, 0xc8, 0xbb, 0xf6, 0x7b, 0xd7, 0x58, 0xe1, 0xa7, 0xb7, 0x6e, 0xab, 0x69, 0x68, 0xfc, 0xf4,
	0xc6, 0xe9, 0xf7, 0x8c, 0x1c, 0x3f, 0xbd, 0xe3, 0x27, 0x1d, 0x95, 0x40, 0x6f, 0x3a, 0xc7, 0x46,
	0x7e, 0xfb, 0x35, 0xac, 0x2f, 0x91, 0x3b, 0x47, 0xf5, 0xfa, 0x3d, 0xdb, 0x58, 0x41, 0x15, 0x28,
	0xb8, 0x16, 0x3e, 0x38, 0x35, 0x34, 0xee, 0x70, 0xda, 0x19, 0x18, 0x39, 0x54, 0x84, 0xdc, 0xc1,
	0xa9, 0xa1, 0xf3, 0xdf, 0xf7, 0xa7, 0x46, 0x7e, 0xfb, 0x07, 0x80, 0x19, 0xd1, 0xf3, 0xc4, 0xb1,
	0x75, 0x32, 0xb4, 0x8f, 0xed, 0x9e, 0xeb, 0x18, 0x2b, 0xe8, 0x1e, 0x18, 0xcd, 0xfe, 0xe1, 0xa1,
	0x35, 0x70, 0xec, 0x56, 0xaa, 0xd5, 0x50, 0x1d, 0x36, 0x3a, 0x3d, 0xd7, 0xc6, 0xc7, 0xd6, 0xe1,
	0xd0, 0x39, 0xea, 0x76, 0x2d, 0xdc, 0x39, 0xb5, 0xdc, 0x8e, 0xc8, 0x71, 0x15, 0x2a, 0xed, 0x8e,
	0xe3, 0xf6, 0x0f, 0xb0, 0xd5, 0x35, 0xf4, 0xed, 0xbf, 0xb4, 0xb4, 0x09, 0x22, 0x7e, 0x09, 0x74,
	0xe7, 0xa8, 0x2b, 0x9f, 0xd7, 0xb5, 0xad, 0x9e, 0xa1, 0xf1, 0xda, 0x74, 0xed, 0x56, 0xc7, 0xe2,
	0xce, 0x25, 0xd0, 0xbb, 0xd6, 0x7b, 0xf9, 0xbe, 0x6e, 0xa7, 0x67, 0xe4, 0xd1, 0x06, 0x20, 0xc7,
	0xb5, 0x7a, 0x2d, 0x0b, 0xb7, 0x86, 0x2d, 0xfb, 0xb8, 0x23, 0xaf, 0x29, 0xf0, 0x44, 0xdd, 0x36,
	0xee, 0x1f, 0x1d, 0xb4, 0x07, 0x47, 0xae, 0x51, 0xe4, 0xcd, 0x38, 0xb4, 0x5c, 0xbb, 0xd7, 0xfc,
	0xde, 0x28, 0xa1, 0xbb, 0xb0, 0x3e, 0xb0, 0x71, 0xd3, 0xee, 0xb9, 0x9d, 0x43, 0x7b, 0xb8, 0xbf,
	0xef, 0xb6, 0x8d, 0xf2, 0xb2, 0xf2, 0x99, 0xdb, 0x36, 0x2a, 0xcb, 0xca, 0x2f, 0xdd, 0xb6, 0x01,
	0x4b, 0xca, 0xe7, 0x5c, 0x59, 0x5d, 0x52, 0x3e, 0xe3, 0xca, 0xda, 0xde, 0x6f, 0x3a, 0xdc, 0x6f,
	0xf2, 0xa1, 0x19, 0x90, 0x44, 0xec, 0xe1, 0xc8, 0x27, 0xea, 0x7f, 0x89, 0x5e, 0x03, 0x6a, 0x8a,
	0x4d, 0x27, 0x15, 0x72, 0xc1, 0xa1, 0x3b, 0x0b, 0x1f, 0x2e, 0xbc, 0xf3, 0xf5, 0x25, 0x82, 0xce,
	0x76, 0xc9, 0x2b, 0x30, 0x2c, 0xc6, 0x3c, 0xff, 0xc3, 0xdc, 0x37, 0xd0, 0x2d, 0xdc, 0xbf, 0x81,
	0x75, 0xe9, 0x6e, 0x65, 0x5f, 0x3b, 0xcb, 0x7f, 0x98, 0x1b, 0xfd, 0x5f, 0xc0, 0xaa, 0xba, 0x5e,
	0xfe, 0x05, 0xd0, 0x22, 0x09, 0xdc, 0xe8, 0xbb, 0x0f, 0x55, 0xbe, 0x16, 0xd3, 0x52, 0x2c, 0x51,
	0x96, 0xe0, 0xaa, 0x7a, 0xaa, 0x9c, 0xdf, 0x9f, 0x5b, 0x1a, 0x7a, 0x0d, 0xb5, 0x66, 0x18, 0xd3,
	0xac, 0x8c, 0xf7, 0x17, 0x7d, 0xb3, 0xef, 0x84, 0xff, 0xba, 0xfb, 0x0d, 0x9c, 0x96, 0x03, 0xbe,
	0x68, 0x22, 0x2f, 0x3c, 0x2b, 0x0a, 0x36, 0x7f, 0xfa, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a,
	0x94, 0x94, 0xb2, 0x87, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CedarPerformanceMetricsClient is the client API for CedarPerformanceMetrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CedarPerformanceMetricsClient interface {
	CreateMetricSeries(ctx context.Context, in *ResultData, opts ...grpc.CallOption) (*MetricsResponse, error)
	AttachResultData(ctx context.Context, in *ResultData, opts ...grpc.CallOption) (*MetricsResponse, error)
	AttachArtifacts(ctx context.Context, in *ArtifactData, opts ...grpc.CallOption) (*MetricsResponse, error)
	AttachRollups(ctx context.Context, in *RollupData, opts ...grpc.CallOption) (*MetricsResponse, error)
	SendMetrics(ctx context.Context, opts ...grpc.CallOption) (CedarPerformanceMetrics_SendMetricsClient, error)
	CloseMetrics(ctx context.Context, in *MetricsSeriesEnd, opts ...grpc.CallOption) (*MetricsResponse, error)
}

type cedarPerformanceMetricsClient struct {
	cc *grpc.ClientConn
}

func NewCedarPerformanceMetricsClient(cc *grpc.ClientConn) CedarPerformanceMetricsClient {
	return &cedarPerformanceMetricsClient{cc}
}

func (c *cedarPerformanceMetricsClient) CreateMetricSeries(ctx context.Context, in *ResultData, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/cedar.CedarPerformanceMetrics/CreateMetricSeries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cedarPerformanceMetricsClient) AttachResultData(ctx context.Context, in *ResultData, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/cedar.CedarPerformanceMetrics/AttachResultData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cedarPerformanceMetricsClient) AttachArtifacts(ctx context.Context, in *ArtifactData, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/cedar.CedarPerformanceMetrics/AttachArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cedarPerformanceMetricsClient) AttachRollups(ctx context.Context, in *RollupData, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/cedar.CedarPerformanceMetrics/AttachRollups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cedarPerformanceMetricsClient) SendMetrics(ctx context.Context, opts ...grpc.CallOption) (CedarPerformanceMetrics_SendMetricsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CedarPerformanceMetrics_serviceDesc.Streams[0], "/cedar.CedarPerformanceMetrics/SendMetrics", opts...)
	if err != nil {
		return nil, err
	}
	x := &cedarPerformanceMetricsSendMetricsClient{stream}
	return x, nil
}

type CedarPerformanceMetrics_SendMetricsClient interface {
	Send(*MetricsEvent) error
	CloseAndRecv() (*SendResponse, error)
	grpc.ClientStream
}

type cedarPerformanceMetricsSendMetricsClient struct {
	grpc.ClientStream
}

func (x *cedarPerformanceMetricsSendMetricsClient) Send(m *MetricsEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cedarPerformanceMetricsSendMetricsClient) CloseAndRecv() (*SendResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cedarPerformanceMetricsClient) CloseMetrics(ctx context.Context, in *MetricsSeriesEnd, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/cedar.CedarPerformanceMetrics/CloseMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CedarPerformanceMetricsServer is the server API for CedarPerformanceMetrics service.
type CedarPerformanceMetricsServer interface {
	CreateMetricSeries(context.Context, *ResultData) (*MetricsResponse, error)
	AttachResultData(context.Context, *ResultData) (*MetricsResponse, error)
	AttachArtifacts(context.Context, *ArtifactData) (*MetricsResponse, error)
	AttachRollups(context.Context, *RollupData) (*MetricsResponse, error)
	SendMetrics(CedarPerformanceMetrics_SendMetricsServer) error
	CloseMetrics(context.Context, *MetricsSeriesEnd) (*MetricsResponse, error)
}

// UnimplementedCedarPerformanceMetricsServer can be embedded to have forward compatible implementations.
type UnimplementedCedarPerformanceMetricsServer struct {
}

func (*UnimplementedCedarPerformanceMetricsServer) CreateMetricSeries(ctx context.Context, req *ResultData) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetricSeries not implemented")
}
func (*UnimplementedCedarPerformanceMetricsServer) AttachResultData(ctx context.Context, req *ResultData) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachResultData not implemented")
}
func (*UnimplementedCedarPerformanceMetricsServer) AttachArtifacts(ctx context.Context, req *ArtifactData) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachArtifacts not implemented")
}
func (*UnimplementedCedarPerformanceMetricsServer) AttachRollups(ctx context.Context, req *RollupData) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachRollups not implemented")
}
func (*UnimplementedCedarPerformanceMetricsServer) SendMetrics(srv CedarPerformanceMetrics_SendMetricsServer) error {
	return status.Errorf(codes.Unimplemented, "method SendMetrics not implemented")
}
func (*UnimplementedCedarPerformanceMetricsServer) CloseMetrics(ctx context.Context, req *MetricsSeriesEnd) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseMetrics not implemented")
}

func RegisterCedarPerformanceMetricsServer(s *grpc.Server, srv CedarPerformanceMetricsServer) {
	s.RegisterService(&_CedarPerformanceMetrics_serviceDesc, srv)
}

func _CedarPerformanceMetrics_CreateMetricSeries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResultData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CedarPerformanceMetricsServer).CreateMetricSeries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cedar.CedarPerformanceMetrics/CreateMetricSeries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CedarPerformanceMetricsServer).CreateMetricSeries(ctx, req.(*ResultData))
	}
	return interceptor(ctx, in, info, handler)
}

func _CedarPerformanceMetrics_AttachResultData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResultData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CedarPerformanceMetricsServer).AttachResultData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cedar.CedarPerformanceMetrics/AttachResultData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CedarPerformanceMetricsServer).AttachResultData(ctx, req.(*ResultData))
	}
	return interceptor(ctx, in, info, handler)
}

func _CedarPerformanceMetrics_AttachArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtifactData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CedarPerformanceMetricsServer).AttachArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cedar.CedarPerformanceMetrics/AttachArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CedarPerformanceMetricsServer).AttachArtifacts(ctx, req.(*ArtifactData))
	}
	return interceptor(ctx, in, info, handler)
}

func _CedarPerformanceMetrics_AttachRollups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollupData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CedarPerformanceMetricsServer).AttachRollups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cedar.CedarPerformanceMetrics/AttachRollups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CedarPerformanceMetricsServer).AttachRollups(ctx, req.(*RollupData))
	}
	return interceptor(ctx, in, info, handler)
}

func _CedarPerformanceMetrics_SendMetrics_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CedarPerformanceMetricsServer).SendMetrics(&cedarPerformanceMetricsSendMetricsServer{stream})
}

type CedarPerformanceMetrics_SendMetricsServer interface {
	SendAndClose(*SendResponse) error
	Recv() (*MetricsEvent, error)
	grpc.ServerStream
}

type cedarPerformanceMetricsSendMetricsServer struct {
	grpc.ServerStream
}

func (x *cedarPerformanceMetricsSendMetricsServer) SendAndClose(m *SendResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cedarPerformanceMetricsSendMetricsServer) Recv() (*MetricsEvent, error) {
	m := new(MetricsEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CedarPerformanceMetrics_CloseMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsSeriesEnd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CedarPerformanceMetricsServer).CloseMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cedar.CedarPerformanceMetrics/CloseMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CedarPerformanceMetricsServer).CloseMetrics(ctx, req.(*MetricsSeriesEnd))
	}
	return interceptor(ctx, in, info, handler)
}

var _CedarPerformanceMetrics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cedar.CedarPerformanceMetrics",
	HandlerType: (*CedarPerformanceMetricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMetricSeries",
			Handler:    _CedarPerformanceMetrics_CreateMetricSeries_Handler,
		},
		{
			MethodName: "AttachResultData",
			Handler:    _CedarPerformanceMetrics_AttachResultData_Handler,
		},
		{
			MethodName: "AttachArtifacts",
			Handler:    _CedarPerformanceMetrics_AttachArtifacts_Handler,
		},
		{
			MethodName: "AttachRollups",
			Handler:    _CedarPerformanceMetrics_AttachRollups_Handler,
		},
		{
			MethodName: "CloseMetrics",
			Handler:    _CedarPerformanceMetrics_CloseMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendMetrics",
			Handler:       _CedarPerformanceMetrics_SendMetrics_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "vendor/cedar.proto",
}
